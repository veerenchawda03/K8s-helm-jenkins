#Service config

apiVersion: v1
kind: Service
metadata:
  annotations:
    cloud.google.com/neg: '{"ingress":true}'
  
  finalizers:
  - service.kubernetes.io/load-balancer-cleanup
  labels:
    app: fastapi-1
  managedFields:
 
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:finalizers:
          .: {}
          v:"service.kubernetes.io/load-balancer-cleanup": {}
      f:status:
        f:loadBalancer:
          f:ingress: {}
    manager: kube-controller-manager
    operation: Update
  name: fastapi-1-service
  namespace: default
spec:
  clusterIP: 10.8.12.63
  clusterIPs:
  - 10.8.12.63
  externalTrafficPolicy: Cluster
  ports:
  - nodePort: 32212
    port: 80
    protocol: TCP
    targetPort: 8000
  selector:
    app: fastapi-1
  sessionAffinity: None
  type: LoadBalancer
status:
  loadBalancer:
    ingress:
    - ip: 35.239.83.235


---
#Deployment config

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: fastapi-1
  managedFields:
  
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          .: {}
          f:deployment.kubernetes.io/revision: {}
      f:status:
        f:availableReplicas: {}
        f:conditions:
          .: {}
          k:{"type":"Available"}:
            .: {}
            f:lastTransitionTime: {}
            f:lastUpdateTime: {}
            f:message: {}
            f:reason: {}
            f:status: {}
            f:type: {}
          k:{"type":"Progressing"}:
            .: {}
            f:lastTransitionTime: {}
            f:lastUpdateTime: {}
            f:message: {}
            f:reason: {}
            f:status: {}
            f:type: {}
        f:observedGeneration: {}
        f:readyReplicas: {}
        f:replicas: {}
        f:updatedReplicas: {}
    manager: kube-controller-manager
    operation: Update
    
  name: fastapi-1
  namespace: default
  
spec:
  progressDeadlineSeconds: 300
  replicas: 3
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: fastapi-1
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: fastapi-1
    spec:
    
    
    
      containers:
      - image: veeren03/fastapi03:latest
        imagePullPolicy: IfNotPresent
        
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /health
            port: 8000
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1

          
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /health
            port: 8000
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1

        name: veeren-fastapi-1-sha256-1
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30

status:
  availableReplicas: 3
  
  observedGeneration: 1
  readyReplicas: 3
  replicas: 3
  updatedReplicas: 3
---
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  labels:
    app: veeren-fastapi-1
  managedFields:
    - apiVersion: autoscaling/v2beta1
      fieldsType: FieldsV1
      fieldsV1:
        'f:metadata':
          'f:labels':
            .: {}
            'f:app': {}
        'f:spec':
          'f:maxReplicas': {}
          'f:metrics': {}
          'f:minReplicas': {}
          'f:scaleTargetRef':
            'f:apiVersion': {}
            'f:kind': {}
            'f:name': {}
      manager: GoogleCloudConsole
      operation: Update
      
    - apiVersion: autoscaling/v1
      fieldsType: FieldsV1
      fieldsV1:
        'f:metadata':
          'f:annotations':
            .: {}
            'f:autoscaling.alpha.kubernetes.io/conditions': {}
            'f:autoscaling.alpha.kubernetes.io/current-metrics': {}
        'f:status':
          'f:currentCPUUtilizationPercentage': {}
          'f:currentReplicas': {}
          'f:desiredReplicas': {}
          'f:lastScaleTime': {}
      manager: vpa-recommender
      operation: Update
      
  name: veeren-fastapi-1-hpa
  namespace: default
spec:
  maxReplicas: 10
  metrics:
    - resource:
        name: cpu
        targetAverageUtilization: 50
      type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: veeren-fastapi-1


---
#Ingress config
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    ingress.kubernetes.io/backends: '{"k8s1-66859e3e-default-fastapi-1-service-80-531774c7":"HEALTHY"}'
    ingress.kubernetes.io/forwarding-rule: k8s2-fr-1fvu0n1y-default-fast-api-1-ingress-8sxmjv7k
    ingress.kubernetes.io/target-proxy: k8s2-tp-1fvu0n1y-default-fast-api-1-ingress-8sxmjv7k
    ingress.kubernetes.io/url-map: k8s2-um-1fvu0n1y-default-fast-api-1-ingress-8sxmjv7k
  
  finalizers:
  - networking.gke.io/ingress-finalizer-V2
  
  managedFields:
  - apiVersion: extensions/v1beta1
    fieldsType: FieldsV1
    fieldsV1:
      f:spec:
        f:backend:
          .: {}
          f:serviceName: {}
          f:servicePort: {}
    manager: GoogleCloudConsole
    operation: Update
    time: "2021-08-20T20:58:12Z"
  - apiVersion: networking.k8s.io/v1beta1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          .: {}
          f:ingress.kubernetes.io/backends: {}
          f:ingress.kubernetes.io/forwarding-rule: {}
          f:ingress.kubernetes.io/target-proxy: {}
          f:ingress.kubernetes.io/url-map: {}
        f:finalizers:
          .: {}
          v:"networking.gke.io/ingress-finalizer-V2": {}
      f:status:
        f:loadBalancer:
          f:ingress: {}
    manager: glbc
    operation: Update
    time: "2021-08-20T20:58:58Z"
  name: fast-api-1-ingress
  namespace: default
  
spec:
  backend:
    serviceName: fastapi-1-service
    servicePort: 80
status:
  loadBalancer:
    ingress:
    - ip: 34.107.251.63


---
#PVC
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: fastapi-1-pvc
spec:
  storageClassName: fastapi-1-standard-pv
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi


---
#Storage class for PV standard
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: fastapi-1-standard-pv
provisioner: kubernetes.io/gce-pd
volumeBindingMode: Immediate
allowVolumeExpansion: true
reclaimPolicy: Retain
parameters:
  type: pd-standard
  fstype: ext4
  replication-type: none
