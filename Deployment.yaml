#Service config

apiVersion: v1
kind: Service
metadata:
  annotations:
    cloud.google.com/neg: '{"ingress":true}'
  creationTimestamp: "2021-08-20T13:59:13Z"
  finalizers:
  - service.kubernetes.io/load-balancer-cleanup
  labels:
    app: fastapi-1
  managedFields:
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:labels:
          .: {}
          f:app: {}
      f:spec:
        f:externalTrafficPolicy: {}
        f:ports:
          .: {}
          k:{"port":80,"protocol":"TCP"}:
            .: {}
            f:port: {}
            f:protocol: {}
            f:targetPort: {}
        f:selector:
          .: {}
          f:app: {}
        f:sessionAffinity: {}
        f:type: {}
    manager: GoogleCloudConsole
    operation: Update
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:finalizers:
          .: {}
          v:"service.kubernetes.io/load-balancer-cleanup": {}
      f:status:
        f:loadBalancer:
          f:ingress: {}
    manager: kube-controller-manager
    operation: Update
  name: fastapi-1-service
  namespace: default
spec:
  clusterIP: 10.8.12.63
  clusterIPs:
  - 10.8.12.63
  externalTrafficPolicy: Cluster
  ports:
  - nodePort: 32212
    port: 80
    protocol: TCP
    targetPort: 8000
  selector:
    app: fastapi-1
  sessionAffinity: None
  type: LoadBalancer
status:
  loadBalancer:
    ingress:
    - ip: 35.239.83.235


---
#Deployment config

apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  creationTimestamp: "2021-08-20T13:58:18Z"
  generation: 1
  labels:
    app: fastapi-1
  managedFields:
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:labels:
          .: {}
          f:app: {}
      f:spec:
        f:progressDeadlineSeconds: {}
        f:replicas: {}
        f:revisionHistoryLimit: {}
        f:selector: {}
        f:strategy:
          f:rollingUpdate:
            .: {}
            f:maxSurge: {}
            f:maxUnavailable: {}
          f:type: {}
        f:template:
          f:metadata:
            f:labels:
              .: {}
              f:app: {}
          f:spec:
            f:containers:
              k:{"name":"veeren-fastapi-1-sha256-1"}:
                .: {}
                f:image: {}
                f:imagePullPolicy: {}
                f:name: {}
                f:resources: {}
                f:terminationMessagePath: {}
                f:terminationMessagePolicy: {}
            f:dnsPolicy: {}
            f:restartPolicy: {}
            f:schedulerName: {}
            f:securityContext: {}
            f:terminationGracePeriodSeconds: {}
    manager: GoogleCloudConsole
    operation: Update
    time: "2021-08-20T13:58:18Z"
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          .: {}
          f:deployment.kubernetes.io/revision: {}
      f:status:
        f:availableReplicas: {}
        f:conditions:
          .: {}
          k:{"type":"Available"}:
            .: {}
            f:lastTransitionTime: {}
            f:lastUpdateTime: {}
            f:message: {}
            f:reason: {}
            f:status: {}
            f:type: {}
          k:{"type":"Progressing"}:
            .: {}
            f:lastTransitionTime: {}
            f:lastUpdateTime: {}
            f:message: {}
            f:reason: {}
            f:status: {}
            f:type: {}
        f:observedGeneration: {}
        f:readyReplicas: {}
        f:replicas: {}
        f:updatedReplicas: {}
    manager: kube-controller-manager
    operation: Update
    time: "2021-08-20T13:58:33Z"
  name: fastapi-1
  namespace: default
  resourceVersion: "2648"
  uid: 1a9f953a-b4a3-4f98-97e5-0c21a90b016f
spec:
  progressDeadlineSeconds: 300
  replicas: 3
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: fastapi-1
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: fastapi-1
    spec:
      containers:
      - image: gcr.io/erudite-store-319509/veeren-fastapi-1@sha256:82649d02a06d5e3198fc0a1ee56f9e1ea1c62337e63059bc064c8dc3983ce51c
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /health
            port: 8000
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1

          
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /health
            port: 8000
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1

        name: veeren-fastapi-1-sha256-1
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30

status:
  availableReplicas: 3
  conditions:
  - lastTransitionTime: "2021-08-20T13:58:33Z"
    lastUpdateTime: "2021-08-20T13:58:33Z"
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  - lastTransitionTime: "2021-08-20T13:58:18Z"
    lastUpdateTime: "2021-08-20T13:58:33Z"
    message: ReplicaSet "fastapi-1-cf7499849" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  observedGeneration: 1
  readyReplicas: 3
  replicas: 3
  updatedReplicas: 3
---
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  labels:
    app: veeren-fastapi-1
  managedFields:
    - apiVersion: autoscaling/v2beta1
      fieldsType: FieldsV1
      fieldsV1:
        'f:metadata':
          'f:labels':
            .: {}
            'f:app': {}
        'f:spec':
          'f:maxReplicas': {}
          'f:metrics': {}
          'f:minReplicas': {}
          'f:scaleTargetRef':
            'f:apiVersion': {}
            'f:kind': {}
            'f:name': {}
      manager: GoogleCloudConsole
      operation: Update
      time: '2021-08-02T16:39:55Z'
    - apiVersion: autoscaling/v1
      fieldsType: FieldsV1
      fieldsV1:
        'f:metadata':
          'f:annotations':
            .: {}
            'f:autoscaling.alpha.kubernetes.io/conditions': {}
            'f:autoscaling.alpha.kubernetes.io/current-metrics': {}
        'f:status':
          'f:currentCPUUtilizationPercentage': {}
          'f:currentReplicas': {}
          'f:desiredReplicas': {}
          'f:lastScaleTime': {}
      manager: vpa-recommender
      operation: Update
      time: '2021-08-02T16:45:17Z'
  name: veeren-fastapi-1-hpa-9obq
  namespace: default
spec:
  maxReplicas: 50
  metrics:
    - resource:
        name: cpu
        targetAverageUtilization: 50
      type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: veeren-fastapi-1


---
#Ingress config
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    ingress.kubernetes.io/backends: '{"k8s1-66859e3e-default-fastapi-1-service-80-531774c7":"HEALTHY"}'
    ingress.kubernetes.io/forwarding-rule: k8s2-fr-1fvu0n1y-default-fast-api-1-ingress-8sxmjv7k
    ingress.kubernetes.io/target-proxy: k8s2-tp-1fvu0n1y-default-fast-api-1-ingress-8sxmjv7k
    ingress.kubernetes.io/url-map: k8s2-um-1fvu0n1y-default-fast-api-1-ingress-8sxmjv7k
  creationTimestamp: "2021-08-20T20:58:12Z"
  finalizers:
  - networking.gke.io/ingress-finalizer-V2
  generation: 1
  managedFields:
  - apiVersion: extensions/v1beta1
    fieldsType: FieldsV1
    fieldsV1:
      f:spec:
        f:backend:
          .: {}
          f:serviceName: {}
          f:servicePort: {}
    manager: GoogleCloudConsole
    operation: Update
    time: "2021-08-20T20:58:12Z"
  - apiVersion: networking.k8s.io/v1beta1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          .: {}
          f:ingress.kubernetes.io/backends: {}
          f:ingress.kubernetes.io/forwarding-rule: {}
          f:ingress.kubernetes.io/target-proxy: {}
          f:ingress.kubernetes.io/url-map: {}
        f:finalizers:
          .: {}
          v:"networking.gke.io/ingress-finalizer-V2": {}
      f:status:
        f:loadBalancer:
          f:ingress: {}
    manager: glbc
    operation: Update
    time: "2021-08-20T20:58:58Z"
  name: fast-api-1-ingress
  namespace: default
  resourceVersion: "136265"
  uid: e3f7a88c-5f86-4fba-9922-bc0e39823233
spec:
  backend:
    serviceName: fastapi-1-service
    servicePort: 80
status:
  loadBalancer:
    ingress:
    - ip: 34.107.251.63


---
#PersistentVolume Config


